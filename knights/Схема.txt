v. 0.0.1
Первая версия, проектирование базовой схемы, примерного списка классов, функций и их взаимодействия
==========================================================================================================================================

1. Материнские классы:

- Рыцарь
    Имеет переменные для здоровья (hp), ловкости (agi), удачи (luck) и атаки (atk).
    //Имеет булево поле CanGoOn, указывающее, возможно ли продолжать игру.
- Моб
    Имеет переменные для здоровья (hp), ловкости (agi), и атаки (atk).
- Экип
    Имеет переменные для прочности (Durability), бонуса к атаке (Atk), ловкости (Agi), а также поглощения урона (Absorb).
    При этом в случае оружия Durability уменьшается на 1 с каждым ударом, в случае с броней и щитами - на количество поглощенного урона.
    Будет реализовано в дочерних классах.
- Консумы
    Имеет переменные для восполняемого здоровья (Hp), бонуса к Agi или Luck, а также время действия для бонусов Duration.

В силу скудных знаний классы персонажей и предметов не содержат функций для взаимодействия. В дочерние классы будут добавлены реплики и, вероятно, функции для генерирования лута.


2. Действия:

- Базовый ход
    Совершает бросок и вызывает одну из функций:
        - Сундук (генерирует экип или консум)
        - Привал (восстанавливает 2 Hp)
        - Энкаунтер (генерирует монстра и вызывает секвенцию боя)
        - Специальное действие.

    - Базовый ход предполагается как функция в главном классе, вызывающая случайный (по Rand) вариант из заданных.
    - Сундук будет простым классом, через Rand дающий предмет из списка (первый бросок - тип, второй - конкретный предмет из типа).
    - Привал - функция, добавляющая 2 Hp или до максимума. Вероятно, будет вызываться действие из класса рыцаря.
    - Энкаунтер - функция, генерирующая через Rand моба из списка и вызывающая секвенцию битвы.

    2.1 Битва - функция, сравнивающая хп рыцаря и моба, после чего (в случае возможности продолжать) предлагающая варианты ввода и действующая на основании ввода:
        - Атака:
            Считается множитель для Atk на основании Agi и диапазона для Rand на основании Agi моба и игрока. В результате наносится урон от 0 до n * Atk;
            Атака снимает 1 Durability с оружия в случае его наличия, а также Hp с моба.
            Hp моба сравнивается с 0;
            В случае достижения Hp моба 0 или меньше - функция сразу возвращает Win и заканчивается, генерируя лут из таблицы лута моба.
            //В поле "CanGoOn" ставится True;
        - Защита:
            Считается множитель для последующего участия в рассчете множителя Atk моба в этом ходу;
        - Использовать консум:
            Используется выбранный/единственный консум и применяются его бонусы;
        После каждого действия игрока происходит атака моба с множителем Atk, рассчитываемым на основании Agi моба и игрока, а также множителя защиты в случае выбора соответствующего действия.
        В случае наличия брони снимается соответвенное количество Durability, равное силе текущей атаки либо максимальной Durability, в этом случае остаток вычитается из Hp рыцаря.
        Данный урон вычитается из Hp рыцаря.

        В конце каждой итерации Hp рыцаря сравнивается с 0. В случае достижения 0 функция возвращает "Lose" и вызывает функцию Game Over.

    2.1.1
        
        